<!--
  ~ Copyright Dansk Bibliotekscenter a/s. Licensed under GPLv3
  ~ See license text in LICENSE.md
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>dk.dbc</groupId>
  <artifactId>mconv</artifactId>
  <packaging>jar</packaging>
  <version>1.2</version>
  <name>mconv</name>
  <url>https://github.com/DBCDK/mconv/</url>

  <parent>
    <groupId>dk.dbc</groupId>
    <artifactId>super-pom</artifactId>
    <version>java11-SNAPSHOT</version>
    <relativePath></relativePath>
  </parent>

  <properties>
    <maven-assembly-plugin.version>3.3.0</maven-assembly-plugin.version>
    <picocli.version>4.6.2</picocli.version>
    <slf4j.version>1.7.30</slf4j.version>
    <native.maven.plugin.version>0.9.7.1</native.maven.plugin.version>
    <junit5.version>5.8.2</junit5.version>
    <slf4j.version>1.7.32</slf4j.version>
</properties>

  <repositories>
    <repository>
      <id>mavenrepo.dbc.dk</id>
      <url>http://mavenrepo.dbc.dk/nexus/content/groups/public</url>
    </repository>
  </repositories>

  <distributionManagement>
    <repository>
      <id>mavenrepo.dbc.dk</id>
      <name>DBC's interne Maven Repository</name>
      <url>http://mavenrepo.dbc.dk/content/repositories/releases</url>
    </repository>
  </distributionManagement>

  <dependencies>
    <dependency>
      <groupId>info.picocli</groupId>
      <artifactId>picocli</artifactId>
      <version>${picocli.version}</version>
    </dependency>
    <dependency>
      <groupId>dk.dbc</groupId>
      <artifactId>dbc-commons-marc</artifactId>
      <version>1.6-SNAPSHOT</version>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-api</artifactId>
    </dependency>
    <dependency>
      <groupId>org.hamcrest</groupId>
      <artifactId>hamcrest-core</artifactId>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-nop</artifactId>
      <version>${slf4j.version}</version>
    </dependency>
    <dependency>
      <groupId>com.github.stefanbirkner</groupId>
      <artifactId>system-lambda</artifactId>
      <version>1.2.0</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <annotationProcessorPaths>
            <path>
              <groupId>info.picocli</groupId>
              <artifactId>picocli-codegen</artifactId>
              <version>${picocli.version}</version>
            </path>
          </annotationProcessorPaths>
          <compilerArgs>
            <arg>-Aproject=${project.groupId}/${project.artifactId}</arg>
          </compilerArgs>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>3.3.1</version>
        <configuration>
          <sourcepath>src/main/java</sourcepath>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-assembly-plugin</artifactId>
        <version>${maven-assembly-plugin.version}</version>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <appendAssemblyId>false</appendAssemblyId>
          <archive>
            <manifest>
              <mainClass>dk.dbc.marc.MarcConversionApp</mainClass>
            </manifest>
          </archive>
          <descriptorRefs>
            <descriptorRef>jar-with-dependencies</descriptorRef>
          </descriptorRefs>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>3.0.0-M5</version>
        <configuration>
          <redirectTestOutputToFile>true</redirectTestOutputToFile>
        </configuration>
        <dependencies>
      </dependencies>
      </plugin>

    </plugins>
  </build>

    <profiles>
    <profile>
      <id>native</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.graalvm.buildtools</groupId>
            <artifactId>native-maven-plugin</artifactId>
            <version>${native.maven.plugin.version}</version>
            <extensions>true</extensions>
            <executions>
              <execution>
                <id>build-native</id>
                <goals>
                  <goal>build</goal>
                </goals>
                <phase>package</phase>
              </execution>
              <execution>
                <id>test-native</id>
                <goals>
                  <goal>test</goal>
                </goals>
                <phase>test</phase>
              </execution>
            </executions>
            <configuration>
              <imageName>mconv</imageName>
              <mainClass>dk.dbc.marc.MarcConversionApp</mainClass>
              <buildArgs>
                <buildArg>--no-fallback</buildArg>
                <!-- Allow the image to build with an incomplete class path.
                     Report type resolution errors at runtime when they are
                     accessed the first time, instead of during the image build. -->
                <buildArg>--allow-incomplete-classpath</buildArg>
                <buildArg>-H:ReflectionConfigurationFiles=${project.basedir}/reflectionconfig.json</buildArg>
                <buildArg>-H:ResourceConfigurationFiles=${project.basedir}/resource-config.json</buildArg>
                <buildArg>-H:+ReportExceptionStackTraces</buildArg>
                <buildArg>--initialize-at-build-time=org.slf4j.LoggerFactory</buildArg>
                <buildArg>--initialize-at-build-time=ch.qos.logback.classic.Logger</buildArg>
                <buildArg>--initialize-at-build-time=dk.dbc.marc.CharsetProvider</buildArg>
                <buildArg>--initialize-at-build-time=dk.dbc.marc.DanMarc2CharsetConfiguration</buildArg>
                <buildArg>--initialize-at-build-time=dk.dbc.marc.DanMarc2Charset$1</buildArg>
                <buildArg>--initialize-at-build-time=dk.dbc.marc.Marc8DecodeCodeTable</buildArg>
                <buildArg>--initialize-at-build-time=dk.dbc.marc.Marc8DecodeCodeTable$1</buildArg>
                <buildArg>--initialize-at-build-time=dk.dbc.marc.Marc8EncodeCodeTable</buildArg>
                <buildArg>--initialize-at-build-time=dk.dbc.marc.Marc8EncodeCodeTable$1</buildArg>
                <buildArg>-H:+AddAllCharsets</buildArg>
              </buildArgs>
            </configuration>
          </plugin>
          <!--<plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-failsafe-plugin</artifactId>
            <version>3.0.0-M5</version>
            <configuration>
              <groups>native</groups>
            </configuration>
            <executions>
              <execution>
                <id>run-native-tests</id>
                <phase>integration-test</phase>
                <goals>
                  <goal>integration-test</goal>
                  <goal>verify</goal>
                </goals>
              </execution>
            </executions>
          </plugin> -->
        </plugins>
      </build>
    </profile>
    </profiles>
</project>
